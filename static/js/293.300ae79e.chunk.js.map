{"version":3,"file":"static/js/293.300ae79e.chunk.js","mappings":"kMACA,EAAuB,0BAAvB,EAA6D,+BAA7D,EAAyG,gC,oBCD5FA,EAAiB,SAACC,GAAD,OAAWA,EAAMC,SAASC,KAA1B,EACjBC,EAAkB,SAACH,GAAD,OAAWA,EAAMI,SAAjB,EAClBC,EAAc,SAACL,GAAD,OAAWA,EAAMM,KAAjB,EAEdC,EAAyB,SAACP,GACnC,IAAMQ,EAFkB,SAACR,GAAD,OAAWA,EAAMQ,MAAjB,CAETC,CAAaT,GACtBC,EAAWF,EAAeC,GAEhC,OAAOQ,EAASP,EAASO,QAAO,SAAAE,GAAO,OAAIA,EAAQC,KAAKC,cAAcC,SAASL,EAAOM,oBAA/C,IAAuEb,CACjH,E,SC0DD,EAzDoB,WAElB,IAAMc,GAAWC,EAAAA,EAAAA,MACXf,GAAWgB,EAAAA,EAAAA,IAAYlB,GACvBK,GAAYa,EAAAA,EAAAA,IAAYd,GACxBG,GAAQW,EAAAA,EAAAA,IAAYZ,GAsB1B,OAJAa,EAAAA,EAAAA,YAAU,WACRH,GAASI,EAAAA,EAAAA,MACV,GAAE,CAACJ,KAGF,UAAC,EAAAK,SAAD,YACA,kBAAMC,UAAWC,EAAUC,SAtBR,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAGf,GAAI1B,EAAS2B,MAAK,SAAClB,GAAD,OAAaA,EAAQC,OAASe,EAAKG,SAASlB,KAAKmB,KAAjD,IAChBC,MAAML,EAAKG,SAASlB,KAAKmB,MAAQ,+BAE5B,CACH,IAAMnB,EAAOe,EAAKG,SAASlB,KAAKmB,MAC1BE,EAASN,EAAKG,SAASG,OAAOF,MACtCf,GAASkB,EAAAA,EAAAA,IAAW,CAAEtB,KAAAA,EAAMqB,OAAAA,IAC3B,CACHN,EAAKQ,OACN,EAQC,WACK,mBAAOb,UAAWC,EAAlB,kBAEE,kBACEa,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOjB,UAAWC,EAAlB,oBAEE,kBACEa,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQjB,UAAWC,EAAea,KAAK,SAAvC,4BAED/B,IAAcE,IAAS,oDAG9B,EChED,EAA6B,gCAA7B,EAAwE,8BAAxE,EAAoH,iCCuBpH,EAjBwB,SAAC,GAAkB,IAAhBL,EAAe,EAAfA,SAEjBc,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,EAAAI,SAAD,UACInB,GAAYA,EAASsC,KAAI,SAAC7B,GAAD,OACzB,gBAAIW,UAAWC,EAAf,eAAiDZ,EAAQC,KAAzD,KAAiED,EAAQsB,OAAzE,KAAiF,mBAAQX,UAAWC,EAAgBa,KAAK,SAASK,QAAS,WAPrH,IAACC,IAO+I/B,EAAQgC,GANlL3B,GAAS4B,EAAAA,EAAAA,IAAcF,GAM+J,EAAjG,oBAAjF,MAAkC/B,EAAQgC,GADjB,KAKlC,ECFD,EAdoB,WAGlB,OACE,SAAC,EAAAtB,SAAD,WACA,eAAIC,UAAWC,EAAf,UACE,SAAC,EAAD,CACArB,UAAUgB,EAAAA,EAAAA,IAAYV,QAK3B,ECjBD,EAA4B,mC,UCuB5B,EAlBwB,WAEtB,IAAMQ,GAAWC,EAAAA,EAAAA,MAIjB,OACE,mBAAOK,UAAWC,EAAlB,mCAEI,kBAAOsB,SALc,SAACpB,GAAD,OAAOT,GAAS8B,EAAAA,EAAAA,GAAiBrB,EAAEsB,OAAOhB,OAA1C,EAMnBK,KAAK,OACLxB,KAAK,SACLyB,QAAQ,6HAIjB,ECND,EAViB,WACf,OACE,UAAC,EAAAhB,SAAD,YACI,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGP,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/SearchingFilter/SearchingFilter.module.css?84d2","components/SearchingFilter/SearchingFilter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","export const selectContacts = (state) => state.contacts.items;\nexport const selectIsLoading = (state) => state.isLoading;\nexport const selectError = (state) => state.error;\nexport const selectFilter = (state) => state.filter; \nexport const selectFilteredContacts = (state) => {\n    const filter = selectFilter(state);\n    const contacts = selectContacts(state);\n\n    return filter ? contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLocaleLowerCase())) : contacts;\n}\n","import React, { Fragment } from 'react';\nimport css from './ContactForm.module.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\n\n\nconst ContactForm = () => {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);  \n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n   \n    if (contacts.some((contact) => contact.name === form.elements.name.value)) {\n      alert(form.elements.name.value + ' is already in contacts');\n      } \n      else {\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n      dispatch(addContact({ name, number }))       \n      }\n    form.reset();\n  }\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n    <form className={css.form} onSubmit={handleSubmit}>        \n         <label className={css.formLabel}>\n           Name \n           <input\n             type=\"text\"\n             name=\"name\"\n             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n             required\n           />\n         </label>\n         <label className={css.formLabel}>\n           Number \n           <input \n             type=\"tel\"\n             name=\"number\"\n             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n             required\n           />\n         </label>\n         <button className={css.formButton}type='submit'>Add contact</button>\n       </form>\n       {isLoading && !error && <b>Request in progress...</b>}\n       </Fragment>\n  )\n}\n\nexport default ContactForm\n","// extracted by mini-css-extract-plugin\nexport default {\"formButton\":\"ContactList_formButton__A37SK\",\"listItem\":\"ContactList_listItem__SptUx\",\"contactList\":\"ContactList_contactList__UFVCg\"};","import React, { Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactList.module.css';\nimport PropTypes from \"prop-types\";\n\n\nconst ContactListItem = ({ contacts }) => {\n\n    const dispatch = useDispatch();  \n    \n    const handleDeleteContact = (contactId) => {\n      dispatch(deleteContact(contactId));\n    };\n    \n    return (\n      <Fragment>\n        { contacts && contacts.map((contact) => \n          <li className={css.listItem} key={contact.id}>- {contact.name}: {contact.number} <button className={css.formButton} type='button' onClick={() => {handleDeleteContact(contact.id)}}>Delete</button> </li>)} \n      </Fragment>\n        \n  )\n};\n\nexport default ContactListItem;\n\n\nContactListItem.propTypes = {\n  contact: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired, \n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }))\n};","import React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport ContactListItem from './ContactListItem';\nimport css from './ContactList.module.css'\n\nconst ContactList = () => {\n  \n \n  return (\n    <Fragment>\n    <ul className={css.contactList}>            \n      <ContactListItem \n      contacts={useSelector(selectFilteredContacts)}\n      />     \n    </ul>\n    </Fragment>\n  )\n};\n\nexport default ContactList;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"formLabel\":\"SearchingFilter_formLabel__I7S3W\"};","import React from 'react';\nimport css from'./SearchingFilter.module.css'\nimport { useDispatch} from 'react-redux';\nimport { setContactFilter } from 'redux/contacts/filterSlice';\n\n\nconst SearchingFilter = () => {\n\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (e) => dispatch(setContactFilter(e.target.value))\n\n  return (\n    <label className={css.formLabel} >\n        Find contacts by name\n        <input onChange={handleFilterChange}\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        />\n        </label>\n  )\n}\n\nexport default SearchingFilter;\n\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport SearchingFilter from 'components/SearchingFilter/SearchingFilter';\nimport { Fragment } from 'react';\nimport React from 'react';\n\nconst Contacts = () => {\n  return (\n    <Fragment>\n        <ContactForm/>\n        <SearchingFilter/>\n        <ContactList />\n    </Fragment>\n  )\n}\n\nexport default Contacts"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","selectFilter","contact","name","toLowerCase","includes","toLocaleLowerCase","dispatch","useDispatch","useSelector","useEffect","fetchContacts","Fragment","className","css","onSubmit","e","preventDefault","form","currentTarget","some","elements","value","alert","number","addContact","reset","type","pattern","title","required","map","onClick","contactId","id","deleteContact","onChange","setContactFilter","target"],"sourceRoot":""}