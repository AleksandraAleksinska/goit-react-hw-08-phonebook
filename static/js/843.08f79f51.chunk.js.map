{"version":3,"file":"static/js/843.08f79f51.chunk.js","mappings":"kMACA,EAAuB,0BAAvB,EAA6D,+BAA7D,EAAyG,gC,oBCD5FA,EAAiB,SAACC,GAAD,OAAWA,EAAMC,SAASC,KAA1B,EACjBC,EAAkB,SAACH,GAAD,OAAWA,EAAMI,SAAjB,EAClBC,EAAc,SAACL,GAAD,OAAWA,EAAMM,KAAjB,EAEdC,EAAyB,SAACP,GACnC,IAAMQ,EAFkB,SAACR,GAAD,OAAWA,EAAMQ,MAAjB,CAETC,CAAaT,GACtBC,EAAWF,EAAeC,GAEhC,OAAOQ,EAASP,EAASO,QAAO,SAAAE,GAAO,OAAIA,EAAQC,KAAKC,cAAcC,SAASL,EAAOM,oBAA/C,IAAuEb,CACjH,ECRD,EAA4B,mC,mBCuB5B,EAlBwB,WAEtB,IAAMc,GAAWC,EAAAA,EAAAA,MAIjB,OACE,mBAAOC,UAAWC,EAAlB,mCAEI,kBAAOC,SALc,SAACC,GAAD,OAAOL,GAASM,EAAAA,EAAAA,GAAiBD,EAAEE,OAAOC,OAA1C,EAMnBC,KAAK,OACLb,KAAK,SACLc,QAAQ,6HAIjB,ECrBD,EAA6B,gCAA7B,EAAwE,8BAAxE,EAAoH,iCCuBpH,EAjBwB,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAEjBc,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,EAAAU,SAAD,UACIzB,GAAYA,EAAS0B,KAAI,SAACjB,GAAD,OACzB,gBAAIO,UAAWC,EAAf,eAAiDR,EAAQC,KAAzD,KAAiED,EAAQkB,MAAzE,KAAgF,mBAAQX,UAAWC,EAAgBM,KAAK,SAASK,QAAS,WAPpH,IAACC,IAO8IpB,EAAQqB,GANjLhB,GAASiB,EAAAA,EAAAA,IAAcF,GAM8J,EAAjG,oBAAhF,MAAkCpB,EAAQqB,GADjB,KAKlC,ECFD,EAdoB,WAGlB,OACE,SAAC,EAAAL,SAAD,WACA,eAAIT,UAAWC,EAAf,UACE,SAAC,EAAD,CACAjB,UAAUgC,EAAAA,EAAAA,IAAY1B,QAK3B,ECqDD,EA3DoB,WAElB,IAAMQ,GAAWC,EAAAA,EAAAA,MACXf,GAAWgC,EAAAA,EAAAA,IAAYlC,GACvBK,GAAY6B,EAAAA,EAAAA,IAAY9B,GACxBG,GAAQ2B,EAAAA,EAAAA,IAAY5B,GAsB1B,OAJA6B,EAAAA,EAAAA,YAAU,WACRnB,GAASoB,EAAAA,EAAAA,MACV,GAAE,CAACpB,KAGF,UAAC,EAAAW,SAAD,YACA,kBAAMT,UAAWC,EAAUkB,SAtBR,SAAChB,GACpBA,EAAEiB,iBACF,IAAMC,EAAOlB,EAAEmB,cAGf,GAAItC,EAASuC,MAAK,SAAC9B,GAAD,OAAaA,EAAQC,OAAS2B,EAAKG,SAAS9B,KAAKY,KAAjD,IAChBmB,MAAMJ,EAAKG,SAAS9B,KAAKY,MAAQ,+BAE5B,CACH,IAAMZ,EAAO2B,EAAKG,SAAS9B,KAAKY,MAC1BK,EAAQU,EAAKG,SAASE,OAAOpB,MACrCR,GAAS6B,EAAAA,EAAAA,IAAW,CAAEjC,KAAAA,EAAMiB,MAAAA,IAC3B,CACHU,EAAKO,OACN,EAQC,WACK,mBAAO5B,UAAWC,EAAlB,kBAEE,kBACEM,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRqB,MAAM,yIACNC,UAAQ,QAGZ,mBAAO9B,UAAWC,EAAlB,oBAEE,kBACEM,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRqB,MAAM,+FACNC,UAAQ,QAGZ,mBAAQ9B,UAAWC,EAAeM,KAAK,SAAvC,4BAEDpB,IAAcE,IAAS,mDACxB,SAAC,EAAD,KACA,SAAC,EAAD,MAGN,C","sources":["webpack://react-homework-template/./src/pages/ContactForm/ContactForm.module.css?7e01","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/SearchingFilter/SearchingFilter.module.css?84d2","components/SearchingFilter/SearchingFilter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/ContactForm/ContactForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__0+1Gu\",\"formLabel\":\"ContactForm_formLabel__nyabc\",\"formButton\":\"ContactForm_formButton__M8-Bf\"};","export const selectContacts = (state) => state.contacts.items;\nexport const selectIsLoading = (state) => state.isLoading;\nexport const selectError = (state) => state.error;\nexport const selectFilter = (state) => state.filter; \nexport const selectFilteredContacts = (state) => {\n    const filter = selectFilter(state);\n    const contacts = selectContacts(state);\n\n    return filter ? contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLocaleLowerCase())) : contacts;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formLabel\":\"SearchingFilter_formLabel__I7S3W\"};","import React from 'react';\nimport css from'./SearchingFilter.module.css'\nimport { useDispatch} from 'react-redux';\nimport { setContactFilter } from 'redux/contacts/filterSlice';\n\n\nconst SearchingFilter = () => {\n\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (e) => dispatch(setContactFilter(e.target.value))\n\n  return (\n    <label className={css.formLabel} >\n        Find contacts by name\n        <input onChange={handleFilterChange}\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        />\n        </label>\n  )\n}\n\nexport default SearchingFilter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"formButton\":\"ContactList_formButton__A37SK\",\"listItem\":\"ContactList_listItem__SptUx\",\"contactList\":\"ContactList_contactList__UFVCg\"};","import React, { Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactList.module.css';\nimport PropTypes from \"prop-types\";\n\n\nconst ContactListItem = ({ contacts }) => {\n\n    const dispatch = useDispatch();  \n    \n    const handleDeleteContact = (contactId) => {\n      dispatch(deleteContact(contactId));\n    };\n    \n    return (\n      <Fragment>\n        { contacts && contacts.map((contact) => \n          <li className={css.listItem} key={contact.id}>- {contact.name}: {contact.phone} <button className={css.formButton} type='button' onClick={() => {handleDeleteContact(contact.id)}}>Delete</button> </li>)} \n      </Fragment>\n        \n  )\n};\n\nexport default ContactListItem;\n\n\nContactListItem.propTypes = {\n  contact: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired, \n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  }))\n};","import React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport ContactListItem from './ContactListItem';\nimport css from './ContactList.module.css'\n\nconst ContactList = () => {\n  \n \n  return (\n    <Fragment>\n    <ul className={css.contactList}>            \n      <ContactListItem \n      contacts={useSelector(selectFilteredContacts)}\n      />     \n    </ul>\n    </Fragment>\n  )\n};\n\nexport default ContactList;\n\n","import React, { Fragment } from 'react';\nimport css from './ContactForm.module.css';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport SearchingFilter from 'components/SearchingFilter/SearchingFilter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\n\n\nconst ContactForm = () => {\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);  \n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n   \n    if (contacts.some((contact) => contact.name === form.elements.name.value)) {\n      alert(form.elements.name.value + ' is already in contacts');\n      } \n      else {\n        const name = form.elements.name.value;\n        const phone = form.elements.number.value;\n      dispatch(addContact({ name, phone }))       \n      }\n    form.reset();\n  }\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n    <form className={css.form} onSubmit={handleSubmit}>        \n         <label className={css.formLabel}>\n           Name \n           <input\n             type=\"text\"\n             name=\"name\"\n             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n             required\n           />\n         </label>\n         <label className={css.formLabel}>\n           Number \n           <input \n             type=\"tel\"\n             name=\"number\"\n             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n             required\n           />\n         </label>\n         <button className={css.formButton}type='submit'>Add contact</button>\n       </form>\n       {isLoading && !error && <b>Request in progress...</b>}\n       <SearchingFilter />\n       <ContactList />\n       </Fragment>\n  )\n}\n\nexport default ContactForm\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","selectFilter","contact","name","toLowerCase","includes","toLocaleLowerCase","dispatch","useDispatch","className","css","onChange","e","setContactFilter","target","value","type","pattern","Fragment","map","phone","onClick","contactId","id","deleteContact","useSelector","useEffect","fetchContacts","onSubmit","preventDefault","form","currentTarget","some","elements","alert","number","addContact","reset","title","required"],"sourceRoot":""}